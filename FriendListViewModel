import Foundation
import Combine

class FriendListViewModel: ObservableObject {
    @Published var friends: [Friend] = []
    @Published var errorMessage: String?

    func fetchFriends() {
        guard let url = URL(string: "https://api.example.com/friends") else { return }

        let task = URLSession.shared.dataTask(with: url) { data, response, error in
            if let error = error {
                DispatchQueue.main.async {
                    self.errorMessage = "Error: \(error.localizedDescription)"
                }
                return
            }

            guard let data = data else { return }

            do {
                let decodedFriends = try JSONDecoder().decode([Friend].self, from: data)
                DispatchQueue.main.async {
                    self.friends = decodedFriends
                }
            } catch {
                DispatchQueue.main.async {
                    self.errorMessage = "Error: \(error.localizedDescription)"
                }
            }
        }
        task.resume()
    }
}
